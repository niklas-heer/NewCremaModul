<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>346</string>
	<key>AMApplicationVersion</key>
	<string>2.3</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>Shell-Skript ausführen</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string>import os
import gntp.notifier
import sys
import easygui as eg
import urllib

def download(url):
    """Copy the contents of a file from a given URL
    to a local file.
    """
    home = os.getenv("HOME")
    folder = home + "/Library/Application Support/NH_CremaModule/"
    if not os.path.exists(folder):
        os.makedirs(folder)
    if not os.path.exists(folder + url.split('/')[-1]):
        webFile = urllib.urlopen(url)
        localFile = open(folder + url.split('/')[-1], 'w')
        localFile.write(webFile.read())
        webFile.close()
        localFile.close()
    return (folder + url.split('/')[-1])

if __name__ == '__main__':
    direc = ""
    name = eg.enterbox(msg='Enter Module Name.', title='New CremaMobile Module', default='', strip=True, 	image=None, root=None)
    new = 0
    existed = 0
    message = ""
    image = ""

    ### image runterladen
    try:
       image = open(download("http://niklas-heer.de/pics/new_file.png")).read()
    except IOError:
        print 'Filename not found.'

    for f in sys.argv[1:]:
        direc = f

    folder = direc + "/" + name
    if not os.path.exists(folder):
        os.makedirs(folder)

    # Create "manifest.json.php"
    try:
        fd = os.open(folder + "/manifest.json.php", os.O_WRONLY | os.O_CREAT | os.O_EXCL)
        f = os.fdopen(fd, "w")
        f.write('&lt;?php\n    return array(\n        "dependencies" =&gt; array(\n            "libs" =&gt; array("cremabase/cremaMobile"),\n            \n            "project" =&gt; array(),\n            \n            "controller" =&gt; array(),\n            \n            "features" =&gt; array()\n        ),\n        \n        "js" =&gt; array(\n            "files" =&gt; array(\n                "View.coffee",\n                "ViewController.coffee"\n            )\n        ),\n        \n        "php" =&gt; array(\n            "files" =&gt; array()\n        ),\n        \n        "less" =&gt; array(\n            "files" =&gt; array()\n        )\n    );\n?&gt;')
        f.close()
        new += 1
    except Exception, e:
        existed += 1

    # Create "View.coffee"
    try:
        fd = os.open(folder + "/View.coffee", os.O_WRONLY | os.O_CREAT | os.O_EXCL)
        f = os.fdopen(fd, "w")
        f.write('class crema.views.' + name + ' extends crema.MobileView\n    constructor: (@controller, options) -&gt;\n        super @controller, options)\n')
        f.close()
        new += 1
    except Exception, e:
        existed += 1

    # Create "ViewController.coffee"
    try:
        fd = os.open(folder + "/ViewController.coffee", os.O_WRONLY | os.O_CREAT | os.O_EXCL)
        f = os.fdopen(fd, "w")
        f.write('class crema.viewControllers.' + name + ' extends crema.ViewController\n    constructor: (options = {}) -&gt;\n        super options')
        f.close()
        new += 1
    except Exception, e:
        existed += 1

    message = str(new) + ' files created - ' + str(existed) + ' files existed'

    growl = gntp.notifier.GrowlNotifier(
        applicationName = "My Application Name",
        notifications = ["New Updates","New Messages"],
        defaultNotifications = ["New Messages"],
    )
    growl.register()
    
    growl.notify(
        noteType = "New Messages",
        title = '"' + name + '" Modul created!',
        description = message,
    	icon = image,
        sticky = False,
        priority = 1,
    )</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>1</integer>
					<key>shell</key>
					<string>/usr/bin/python</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>3C3A6B64-CFFD-4C1A-905A-C7C19242C401</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>Skript</string>
					<string>Befehl</string>
					<string>Ausführen</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>AC591804-E3EA-4CDE-81AC-F67B871E7BD8</string>
				<key>UUID</key>
				<string>034DB124-D289-473D-8BE0-59BCADAABD30</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>460.500000:663.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/German.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.fileSystemObject</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
